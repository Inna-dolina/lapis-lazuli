################################################################################
# Copyright 2014 spriteCloud B.V. All rights reserved.
# Generated by LapisLazuli, version 0.0.1
# Author: "Onno Steenbergen" <onno@steenbe.nl>

require 'lapis_lazuli'
ll = LapisLazuli::LapisLazuli.instance

Given(/^I navigate to the (.*) test page$/) do |page|
  config = "server.url"
  if ll.has_env?(config)
    url = ll.env(config)
    ll.browser.goto "#{url}#{page.downcase.gsub(" ","_")}.html"
  else
    ll.error(:env => config)
  end
end

Given(/I click (the|a) (first|last|random|[0-9]+[a-z]+) (.*)$/) do |arg1, index, type|
  # Convert the type text to a symbol
  type = type.downcase.gsub(" ","_")

  pick = 0
  if ["first","last","random"].include?(index)
    pick = index.to_sym
  else
    pick = index.to_i - 1
  end
  # Options for find
  options = {}
  # Select the correct element
  options[type.to_sym] = {}
  # Pick the correct one
  options[:pick] = pick
  # Execute the find
  type_element = ll.browser.find(options)
  type_element.click
end


Given(/^I create a firefox browser named "(.*?)"( with proxy to "(.*?)")$/) do |name, proxy, proxy_url|
  browser = nil
  if proxy
    ll.log.debug("Starting with profile")
    profile = Selenium::WebDriver::Firefox::Profile.new
    profile.proxy = Selenium::WebDriver::Proxy.new :http => proxy_url
    browser = ll.browser.create :firefox, :profile => profile
  else
    browser = ll.browser.create :firefox
  end
  ll.scenario.storage.set(name, browser)
end

Given(/^I close the browser named "(.*?)"$/) do |name|
  if ll.scenario.storage.has? name
    browser = ll.scenario.storage.get name
    browser.close
  else
    ll.error("No item in the storage named #{name}")
  end
end
